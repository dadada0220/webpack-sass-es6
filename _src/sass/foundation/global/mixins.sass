@charset "utf-8"

@use "variables" as *
@use "sass:math"

// 背景画像
// **********************************************
=background-image($file_name, $repeat: no-repeat)
  background-image: url($path_img + $file_name)
  background-repeat: $repeat
  background-position: 50% 50%

// アイコン（背景画像）
// **********************************************
=icon($file_name, $width, $height)
  background: url($path_img + $file_name) no-repeat 50% 50%
  background-size: $width $height
  width: $width
  height: $height

// メディアクエリ
// **********************************************
=max-screen($breakPoint)
  @media screen and (max-width: $breakPoint)
    @content

=min-screen($breakPoint)
  @media screen and (min-width: $breakPoint)
    @content

=screen($breakPoint_min, $breakPoint_max)
  @media screen and (min-width: $breakPoint_min) and (max-width: $breakPoint_max)
    @content

// 要素を中央配置
// **********************************************
// 旧バージョン
// =center($direction, $other_transform: false)
//   position: absolute
//   @if $direction==xy
//     top: 50%
//     left: 50%
//     @if $other_transform
//       transform: translate(-50%, -50%) $other_transform
//     @else
//       transform: translate(-50%, -50%)
//   @else if $direction==x
//     left: 50%
//     @if $other_transform
//       transform: translateX(-50%) $other_transform
//     @else
//       transform: translateX(-50%)
//   @else if $direction==y
//     top: 50%
//     @if $other_transform
//       transform: translateY(-50%) $other_transform
//     @else
//       transform: translateY(-50%)
=center($direction)
  position: absolute
  margin: auto
  @if $direction==xy
    inset: 0
  @else if $direction==x
    inset: auto 0
  @else if $direction==y
    inset: 0 auto

// 三角形を生成
// **********************************************

// 塗りの三角形
// ------------
=triangle($direction, $width, $height, $color)
  width: 0
  height: 0
  border-style: solid
  $border_width: math.div($width, 2)
  $border_height: math.div($height, 2)
  @if ($direction == top)
    border-width: 0 $border_width $height $border_width
    border-color: transparent transparent $color transparent
  @else if ($direction == left)
    border-width: $border_height $width $border_height 0
    border-color: transparent $color transparent transparent
  @else if ($direction == right)
    border-width: $border_height 0 $border_height $width
    border-color: transparent transparent transparent $color
  @else if ($direction == bottom)
    border-width: $height $border_width 0 $border_width
    border-color: $color transparent transparent transparent
  @else if ($direction == right-top)
    border-width: $border_width $border_width $border_width $border_width
    border-color: $color $color transparent transparent
  @else if ($direction == right-bottom)
    border-width: $border_width $border_width $border_width $border_width
    border-color: transparent $color $color transparent
  @else if ($direction == left-top)
    border-width: $border_width $border_width $border_width $border_width
    border-color: $color transparent transparent $color
  @else if ($direction == left-bottom)
    border-width: $border_width $border_width $border_width $border_width
    border-color: transparent transparent $color $color

// 線の三角形
// ------------
=triangle_border($direction, $border_width, $color, $size: 20px)
  width: $size
  height: $size
  border-top: solid $border_width $color
  border-left: solid $border_width $color
  @if ($direction == top)
    transform: rotate(45deg)
  @if ($direction == right-top)
    transform: rotate(90deg)
  @if ($direction == right)
    transform: rotate(135deg)
  @if ($direction == right-bottom)
    transform: rotate(180deg)
  @if ($direction == bottom)
    transform: rotate(225deg)
  @if ($direction == left-bottom)
    transform: rotate(270deg)
  @if ($direction == left)
    transform: rotate(315deg)
  @if ($direction == left-top)
    transform: rotate(0deg)

// テキストに下線（複数行対応）
// **********************************************
=underline-text($color: #ff0, $height: 65%)
  display: inline
  background: linear-gradient(transparent $height, $color 0%)

// カウンターインクリメント
// **********************************************
// 親要素に「counter-reset: $num_name」を指定する
=counter($num_name, $before_text, $after_text)
  content: "#{$before_text}" counter($num_name) "#{$after_text}"
  counter-increment: $num_name

// スクロールバーを非表示
// **********************************************
=hide-scrollbar()
  -ms-overflow-style: none
  scrollbar-width: none
  &::-webkit-scrollbar
    display: none

// margin, paddingのユーティリティクラスを生成
// @param $class クラス名
// @param $property プロパティ名
// @param $double 上下or左右にスタイルを適用させる場合、上下なら'y'、左右なら'x'を与える（省略可）
// **********************************************
=create-space-class($class, $property, $double: false)
  @for $i from 0 through 100
    @if $i % 5 == 0
      #{$class + $i}
        @if($double == false)
          #{$property}: #{$i}px
        @else if($double == 'x' and $i > 0)
          #{$property}: 0 #{$i}px
        @else if($double == 'y' and $i > 0)
          #{$property}: #{$i}px 0
